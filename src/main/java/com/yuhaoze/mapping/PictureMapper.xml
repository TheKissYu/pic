<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yuhaoze.dao.PictureMapper">
  <resultMap id="BaseResultMap" type="com.yuhaoze.entity.Picture">
    <id column="pictureID" jdbcType="INTEGER" property="pictureid" />
    <result column="userId" jdbcType="INTEGER" property="userid" />
    <result column="creat_time" jdbcType="TIMESTAMP" property="creatTime" />
    <result column="picture_status" jdbcType="INTEGER" property="pictureStatus" />
    <result column="picture_path" jdbcType="VARCHAR" property="picturePath" />
    <result column="picture_classic_id" jdbcType="INTEGER" property="pictureClassicId" />
    <result column="picture_name" jdbcType="VARCHAR" property="pictureName" />
    <result column="picture_downlad_count" jdbcType="INTEGER" property="pictureDownladCount" />
  </resultMap>
  <resultMap id="picResult" type="com.yuhaoze.vo.PictureInfo">
    <id column="pictureID" jdbcType="INTEGER" property="pictureid" />
    <result column="userId" jdbcType="INTEGER" property="userid" />
    <result column="creat_time" jdbcType="TIMESTAMP" property="creatTime" />
    <result column="picture_status" jdbcType="INTEGER" property="pictureStatus" />
    <result column="picture_path" jdbcType="VARCHAR" property="picturePath" />
    <result column="picture_classic_id" jdbcType="INTEGER" property="pictureClassicId" />
    <result column="picture_name" jdbcType="VARCHAR" property="pictureName" />
    <result column="classic_name" property="pictureClassicName" />
    <result column="picture_downlad_count" jdbcType="INTEGER" property="pictureDownladCount" />
  </resultMap>
  <resultMap id="pResult" type="com.yuhaoze.vo.PictureVo">
    <id column="pictureID" jdbcType="INTEGER" property="pictureid" />
    <result column="userName" jdbcType="INTEGER" property="userName" />
    <result column="picture_name" jdbcType="VARCHAR" property="pictureName" />
    <result column="picture_path" jdbcType="VARCHAR" property="picPath" />
    <result column="creat_time" jdbcType="TIMESTAMP" property="creatTime" />
  </resultMap>
  <resultMap id="pdResult" type="com.yuhaoze.vo.PicDownloadVo">
    <id column="pictureID" jdbcType="INTEGER" property="pictureid" />
    <result column="userName" jdbcType="INTEGER" property="userName" />
    <result column="picture_name" jdbcType="VARCHAR" property="pictureName" />
    <result column="creat_time" jdbcType="TIMESTAMP" property="creatTime" />
    <result column="picture_downlad_count" jdbcType="INTEGER" property="downloadCounts" />
    <result column="picture_path" jdbcType="VARCHAR" property="picPath" />
  </resultMap>
  <resultMap id="psResult" type="com.yuhaoze.vo.PicStVo">
    <id column="pictureID" jdbcType="INTEGER" property="pictureid" />
    <result column="picture_name" jdbcType="VARCHAR" property="pictureName" />
    <result column="creat_time" jdbcType="TIMESTAMP" property="creatTime" />
    <result column="picture_downlad_count" jdbcType="INTEGER" property="downloadCounts" />
    <result column="picture_status" jdbcType="INTEGER" property="picStatus" />
    <result column="picture_classic_id" jdbcType="INTEGER" property="cId" />
    <result column="picture_path" jdbcType="VARCHAR" property="picPath" />
    <result column="pic_classic_name" jdbcType="VARCHAR" property="cName" />
  </resultMap>
  <sql id="Base_Column_List">
    pictureID, userId, creat_time, picture_status, picture_path, picture_classic_id,
    picture_name, picture_downlad_count
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from t_picture
    where pictureID = #{pictureid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_picture
    where pictureID = #{pictureid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.yuhaoze.entity.Picture">
    insert into t_picture (pictureID, userId, creat_time,
      picture_status, picture_path, picture_classic_id,
      picture_name, picture_downlad_count)
    values (#{pictureid,jdbcType=INTEGER}, #{userid,jdbcType=INTEGER}, #{creatTime,jdbcType=TIMESTAMP},
      #{pictureStatus,jdbcType=INTEGER}, #{picturePath,jdbcType=VARCHAR}, #{pictureClassicId,jdbcType=INTEGER},
      #{pictureName,jdbcType=VARCHAR}, #{pictureDownladCount,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.yuhaoze.entity.Picture">
    insert into t_picture
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="pictureid != null">
        pictureID,
      </if>
      <if test="userid != null">
        userId,
      </if>
      <if test="creatTime != null">
        creat_time,
      </if>
      <if test="pictureStatus != null">
        picture_status,
      </if>
      <if test="picturePath != null">
        picture_path,
      </if>
      <if test="pictureClassicId != null">
        picture_classic_id,
      </if>
      <if test="pictureName != null">
        picture_name,
      </if>
      <if test="pictureDownladCount != null">
        picture_downlad_count,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="pictureid != null">
        #{pictureid,jdbcType=INTEGER},
      </if>
      <if test="userid != null">
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="creatTime != null">
        #{creatTime,jdbcType=TIMESTAMP},
      </if>
      <if test="pictureStatus != null">
        #{pictureStatus,jdbcType=INTEGER},
      </if>
      <if test="picturePath != null">
        #{picturePath,jdbcType=VARCHAR},
      </if>
      <if test="pictureClassicId != null">
        #{pictureClassicId,jdbcType=INTEGER},
      </if>
      <if test="pictureName != null">
        #{pictureName,jdbcType=VARCHAR},
      </if>
      <if test="pictureDownladCount != null">
        #{pictureDownladCount,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.yuhaoze.entity.Picture">
    update t_picture
    <set>
      <if test="userid != null">
        userId = #{userid,jdbcType=INTEGER},
      </if>
      <if test="creatTime != null">
        creat_time = #{creatTime,jdbcType=TIMESTAMP},
      </if>
      <if test="pictureStatus != null">
        picture_status = #{pictureStatus,jdbcType=INTEGER},
      </if>
      <if test="picturePath != null">
        picture_path = #{picturePath,jdbcType=VARCHAR},
      </if>
      <if test="pictureClassicId != null">
        picture_classic_id = #{pictureClassicId,jdbcType=INTEGER},
      </if>
      <if test="pictureName != null">
        picture_name = #{pictureName,jdbcType=VARCHAR},
      </if>
      <if test="pictureDownladCount != null">
        picture_downlad_count = #{pictureDownladCount,jdbcType=INTEGER},
      </if>
    </set>
    where pictureID = #{pictureid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yuhaoze.entity.Picture">
    update t_picture
    set userId = #{userid,jdbcType=INTEGER},
      creat_time = #{creatTime,jdbcType=TIMESTAMP},
      picture_status = #{pictureStatus,jdbcType=INTEGER},
      picture_path = #{picturePath,jdbcType=VARCHAR},
      picture_classic_id = #{pictureClassicId,jdbcType=INTEGER},
      picture_name = #{pictureName,jdbcType=VARCHAR},
      picture_downlad_count = #{pictureDownladCount,jdbcType=INTEGER}
    where pictureID = #{pictureid,jdbcType=INTEGER}
  </update>
  <select id="getPicByCid" parameterType="int" resultMap="pResult">
   select p.pictureID,p.creat_time,p.picture_name,u.userName,p.picture_path from t_picture p
inner join t_picture_classic pc on pc.pic_classic_id = p.picture_classic_id
inner JOIN user_info u ON u.userId=p.userId
where p.picture_classic_id = #{picture_classic_id} AND p.picture_status = 2
  </select>
  <update id="addDownloadCount" parameterType="int">
     update t_picture set picture_downlad_count=picture_downlad_count+1
     where pictureID=#{pid}
  </update>
  <select id="getByDownloadCount" parameterType="int" resultMap="pdResult">
      select p.pictureID,p.creat_time,p.picture_name,u.userName,p.picture_downlad_count,p.picture_path from t_picture p
inner join t_picture_classic pc on pc.pic_classic_id = p.picture_classic_id
inner JOIN user_info u ON u.userId=p.userId
where  p.picture_status = 2 order by picture_downlad_count DEsc LIMIT #{lim}
  </select>

  <update id="updateStatus" parameterType="map">
    update t_picture
    set

      picture_status = #{pictureStatus,jdbcType=INTEGER}
    where pictureID = #{pictureid,jdbcType=INTEGER}
  </update>
  <select id="getAll"  resultMap="pResult">
   select p.pictureID,p.creat_time,p.picture_name,u.userName,p.picture_path from t_picture p
inner join t_picture_classic pc on pc.pic_classic_id = p.picture_classic_id
inner JOIN user_info u ON u.userId=p.userId
where  p.picture_status = 2
  </select>
  <select id="getTopByCid" resultType="map" resultMap="pdResult">
    select p.pictureID,p.creat_time,p.picture_name,u.userName,p.picture_downlad_count,p.picture_path from t_picture p
    inner join t_picture_classic pc on pc.pic_classic_id = p.picture_classic_id
    inner JOIN user_info u ON u.userId=p.userId
    where  p.picture_status = 2 and p.picture_classic_id=#{cid} order by picture_downlad_count DEsc LIMIT #{lim}
  </select>
  <select id="getByStAndUid" resultType="map" resultMap="psResult">
   select p.pictureID,p.creat_time,p.picture_name,p.picture_path,p.picture_status,p.picture_downlad_count,p.picture_classic_id,pc.pic_classic_name from t_picture p
  inner join t_picture_classic pc on pc.pic_classic_id = p.picture_classic_id
where  p.picture_status = #{status} and p.userId =#{uid}
  </select>
  <select id="getBySt" resultType="int" resultMap="psResult">
   select p.pictureID,p.creat_time,p.picture_name,p.picture_path,p.picture_status,p.picture_downlad_count,p.picture_classic_id,pc.pic_classic_name from t_picture p
  inner join t_picture_classic pc on pc.pic_classic_id = p.picture_classic_id
where p.userId =#{uid}
  </select>
  <select id="getPsByUid" resultType="map" resultMap="psResult">
   select p.pictureID,p.creat_time,p.picture_name,p.picture_path,p.picture_status,p.picture_downlad_count,p.picture_classic_id,pc.pic_classic_name from t_picture p
  inner join t_picture_classic pc on pc.pic_classic_id = p.picture_classic_id
where  p.userId =#{uid}
  </select>
</mapper>